// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Log_LogType int32

const (
	Log_LOG_COMMAND                Log_LogType = 0
	Log_LOG_NOOP                   Log_LogType = 1
	Log_LOG_ADD_PEER_DEPRECATED    Log_LogType = 2
	Log_LOG_REMOVE_PEER_DEPRECATED Log_LogType = 3
	Log_LOG_BARRIER                Log_LogType = 4
	Log_LOG_CONFIGURATION          Log_LogType = 5
)

var Log_LogType_name = map[int32]string{
	0: "LOG_COMMAND",
	1: "LOG_NOOP",
	2: "LOG_ADD_PEER_DEPRECATED",
	3: "LOG_REMOVE_PEER_DEPRECATED",
	4: "LOG_BARRIER",
	5: "LOG_CONFIGURATION",
}

var Log_LogType_value = map[string]int32{
	"LOG_COMMAND":                0,
	"LOG_NOOP":                   1,
	"LOG_ADD_PEER_DEPRECATED":    2,
	"LOG_REMOVE_PEER_DEPRECATED": 3,
	"LOG_BARRIER":                4,
	"LOG_CONFIGURATION":          5,
}

func (x Log_LogType) String() string {
	return proto.EnumName(Log_LogType_name, int32(x))
}

func (Log_LogType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1, 0}
}

type RPCHeader struct {
	ProtocolVersion      int64    `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	GroupId              string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPCHeader) Reset()         { *m = RPCHeader{} }
func (m *RPCHeader) String() string { return proto.CompactTextString(m) }
func (*RPCHeader) ProtoMessage()    {}
func (*RPCHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *RPCHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCHeader.Unmarshal(m, b)
}
func (m *RPCHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCHeader.Marshal(b, m, deterministic)
}
func (m *RPCHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCHeader.Merge(m, src)
}
func (m *RPCHeader) XXX_Size() int {
	return xxx_messageInfo_RPCHeader.Size(m)
}
func (m *RPCHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RPCHeader proto.InternalMessageInfo

func (m *RPCHeader) GetProtocolVersion() int64 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *RPCHeader) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

type Log struct {
	Index                uint64      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term                 uint64      `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Type                 Log_LogType `protobuf:"varint,3,opt,name=type,proto3,enum=Log_LogType" json:"type,omitempty"`
	Data                 []byte      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Extensions           []byte      `protobuf:"bytes,5,opt,name=extensions,proto3" json:"extensions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Log) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Log) GetType() Log_LogType {
	if m != nil {
		return m.Type
	}
	return Log_LOG_COMMAND
}

func (m *Log) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Log) GetExtensions() []byte {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type AppendEntriesRequest struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Leader               []byte     `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"`
	PrevLogEntry         uint64     `protobuf:"varint,4,opt,name=prev_log_entry,json=prevLogEntry,proto3" json:"prev_log_entry,omitempty"`
	PrevLogTerm          uint64     `protobuf:"varint,5,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries              []*Log     `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommitIndex    uint64     `protobuf:"varint,7,opt,name=leader_commit_index,json=leaderCommitIndex,proto3" json:"leader_commit_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *AppendEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRequest.Unmarshal(m, b)
}
func (m *AppendEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRequest.Marshal(b, m, deterministic)
}
func (m *AppendEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRequest.Merge(m, src)
}
func (m *AppendEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRequest.Size(m)
}
func (m *AppendEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRequest proto.InternalMessageInfo

func (m *AppendEntriesRequest) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *AppendEntriesRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeader() []byte {
	if m != nil {
		return m.Leader
	}
	return nil
}

func (m *AppendEntriesRequest) GetPrevLogEntry() uint64 {
	if m != nil {
		return m.PrevLogEntry
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() uint64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*Log {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesRequest) GetLeaderCommitIndex() uint64 {
	if m != nil {
		return m.LeaderCommitIndex
	}
	return 0
}

type AppendEntriesResponse struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LastLog              uint64     `protobuf:"varint,3,opt,name=last_log,json=lastLog,proto3" json:"last_log,omitempty"`
	Success              bool       `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	NoRetryBackoff       bool       `protobuf:"varint,5,opt,name=no_retry_backoff,json=noRetryBackoff,proto3" json:"no_retry_backoff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *AppendEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResponse.Unmarshal(m, b)
}
func (m *AppendEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResponse.Marshal(b, m, deterministic)
}
func (m *AppendEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResponse.Merge(m, src)
}
func (m *AppendEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResponse.Size(m)
}
func (m *AppendEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResponse proto.InternalMessageInfo

func (m *AppendEntriesResponse) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *AppendEntriesResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetLastLog() uint64 {
	if m != nil {
		return m.LastLog
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendEntriesResponse) GetNoRetryBackoff() bool {
	if m != nil {
		return m.NoRetryBackoff
	}
	return false
}

type RequestVoteRequest struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Candidate            []byte     `protobuf:"bytes,3,opt,name=candidate,proto3" json:"candidate,omitempty"`
	LastLogIndex         uint64     `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm          uint64     `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	LeadershipTransfer   bool       `protobuf:"varint,6,opt,name=leadership_transfer,json=leadershipTransfer,proto3" json:"leadership_transfer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (m *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(m, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *RequestVoteRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetCandidate() []byte {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *RequestVoteRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

func (m *RequestVoteRequest) GetLeadershipTransfer() bool {
	if m != nil {
		return m.LeadershipTransfer
	}
	return false
}

type RequestVoteResponse struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Peers                []byte     `protobuf:"bytes,3,opt,name=peers,proto3" json:"peers,omitempty"`
	Granted              bool       `protobuf:"varint,4,opt,name=granted,proto3" json:"granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{5}
}

func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (m *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(m, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *RequestVoteResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetPeers() []byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *RequestVoteResponse) GetGranted() bool {
	if m != nil {
		return m.Granted
	}
	return false
}

type TimeoutNowRequest struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TimeoutNowRequest) Reset()         { *m = TimeoutNowRequest{} }
func (m *TimeoutNowRequest) String() string { return proto.CompactTextString(m) }
func (*TimeoutNowRequest) ProtoMessage()    {}
func (*TimeoutNowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{6}
}

func (m *TimeoutNowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeoutNowRequest.Unmarshal(m, b)
}
func (m *TimeoutNowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeoutNowRequest.Marshal(b, m, deterministic)
}
func (m *TimeoutNowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutNowRequest.Merge(m, src)
}
func (m *TimeoutNowRequest) XXX_Size() int {
	return xxx_messageInfo_TimeoutNowRequest.Size(m)
}
func (m *TimeoutNowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutNowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutNowRequest proto.InternalMessageInfo

func (m *TimeoutNowRequest) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

type TimeoutNowResponse struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TimeoutNowResponse) Reset()         { *m = TimeoutNowResponse{} }
func (m *TimeoutNowResponse) String() string { return proto.CompactTextString(m) }
func (*TimeoutNowResponse) ProtoMessage()    {}
func (*TimeoutNowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{7}
}

func (m *TimeoutNowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeoutNowResponse.Unmarshal(m, b)
}
func (m *TimeoutNowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeoutNowResponse.Marshal(b, m, deterministic)
}
func (m *TimeoutNowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutNowResponse.Merge(m, src)
}
func (m *TimeoutNowResponse) XXX_Size() int {
	return xxx_messageInfo_TimeoutNowResponse.Size(m)
}
func (m *TimeoutNowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutNowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutNowResponse proto.InternalMessageInfo

func (m *TimeoutNowResponse) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

// The first InstallSnapshotRequest on the stream contains all the metadata.
// All further messages contain only data.
type InstallSnapshotRequest struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Leader               []byte     `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"`
	LastLogIndex         uint64     `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm          uint64     `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	Peers                []byte     `protobuf:"bytes,6,opt,name=peers,proto3" json:"peers,omitempty"`
	Configuration        []byte     `protobuf:"bytes,7,opt,name=configuration,proto3" json:"configuration,omitempty"`
	ConfigurationIndex   uint64     `protobuf:"varint,8,opt,name=configuration_index,json=configurationIndex,proto3" json:"configuration_index,omitempty"`
	Size                 int64      `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	Data                 []byte     `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *InstallSnapshotRequest) Reset()         { *m = InstallSnapshotRequest{} }
func (m *InstallSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*InstallSnapshotRequest) ProtoMessage()    {}
func (*InstallSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{8}
}

func (m *InstallSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallSnapshotRequest.Unmarshal(m, b)
}
func (m *InstallSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *InstallSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallSnapshotRequest.Merge(m, src)
}
func (m *InstallSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_InstallSnapshotRequest.Size(m)
}
func (m *InstallSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstallSnapshotRequest proto.InternalMessageInfo

func (m *InstallSnapshotRequest) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *InstallSnapshotRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InstallSnapshotRequest) GetLeader() []byte {
	if m != nil {
		return m.Leader
	}
	return nil
}

func (m *InstallSnapshotRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *InstallSnapshotRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

func (m *InstallSnapshotRequest) GetPeers() []byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *InstallSnapshotRequest) GetConfiguration() []byte {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *InstallSnapshotRequest) GetConfigurationIndex() uint64 {
	if m != nil {
		return m.ConfigurationIndex
	}
	return 0
}

func (m *InstallSnapshotRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InstallSnapshotRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type InstallSnapshotResponse struct {
	RpcHeader            *RPCHeader `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool       `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *InstallSnapshotResponse) Reset()         { *m = InstallSnapshotResponse{} }
func (m *InstallSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*InstallSnapshotResponse) ProtoMessage()    {}
func (*InstallSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{9}
}

func (m *InstallSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallSnapshotResponse.Unmarshal(m, b)
}
func (m *InstallSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *InstallSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallSnapshotResponse.Merge(m, src)
}
func (m *InstallSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_InstallSnapshotResponse.Size(m)
}
func (m *InstallSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstallSnapshotResponse proto.InternalMessageInfo

func (m *InstallSnapshotResponse) GetRpcHeader() *RPCHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *InstallSnapshotResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InstallSnapshotResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterEnum("Log_LogType", Log_LogType_name, Log_LogType_value)
	proto.RegisterType((*RPCHeader)(nil), "RPCHeader")
	proto.RegisterType((*Log)(nil), "Log")
	proto.RegisterType((*AppendEntriesRequest)(nil), "AppendEntriesRequest")
	proto.RegisterType((*AppendEntriesResponse)(nil), "AppendEntriesResponse")
	proto.RegisterType((*RequestVoteRequest)(nil), "RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "RequestVoteResponse")
	proto.RegisterType((*TimeoutNowRequest)(nil), "TimeoutNowRequest")
	proto.RegisterType((*TimeoutNowResponse)(nil), "TimeoutNowResponse")
	proto.RegisterType((*InstallSnapshotRequest)(nil), "InstallSnapshotRequest")
	proto.RegisterType((*InstallSnapshotResponse)(nil), "InstallSnapshotResponse")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x6e, 0xeb, 0x44,
	0x14, 0xae, 0x13, 0xe7, 0xef, 0xa4, 0x3f, 0xe9, 0xf4, 0xcf, 0x37, 0xa0, 0x2a, 0xb2, 0xee, 0x22,
	0x57, 0x08, 0x07, 0xca, 0x02, 0xc1, 0x02, 0x48, 0x1b, 0x73, 0x6f, 0xa4, 0x34, 0x09, 0x73, 0x43,
	0x17, 0x6c, 0x2c, 0xd7, 0x9e, 0x24, 0x16, 0xce, 0x8c, 0x19, 0x4f, 0xee, 0x6d, 0x58, 0x23, 0xb1,
	0x62, 0xc9, 0xa3, 0xf0, 0x1a, 0xec, 0x78, 0x0b, 0x1e, 0x02, 0xcd, 0xd8, 0x4e, 0x93, 0x26, 0x2c,
	0x2a, 0xc2, 0xa2, 0xea, 0x9c, 0xef, 0x9b, 0xbf, 0xf3, 0x7d, 0x73, 0x4e, 0x0c, 0xc0, 0xdd, 0xb1,
	0xb0, 0x22, 0xce, 0x04, 0x33, 0xbf, 0x83, 0x0a, 0x1e, 0xde, 0xbc, 0x21, 0xae, 0x4f, 0x38, 0x7a,
	0x05, 0x35, 0x85, 0x7a, 0x2c, 0x74, 0xde, 0x11, 0x1e, 0x07, 0x8c, 0x1a, 0x5a, 0x43, 0x6b, 0xe6,
	0xf1, 0x51, 0x86, 0xdf, 0x25, 0x30, 0x7a, 0x01, 0xe5, 0x09, 0x67, 0xf3, 0xc8, 0x09, 0x7c, 0x23,
	0xd7, 0xd0, 0x9a, 0x15, 0x5c, 0x52, 0x71, 0xd7, 0x37, 0x7f, 0xcf, 0x41, 0xbe, 0xc7, 0x26, 0xe8,
	0x14, 0x0a, 0x01, 0xf5, 0xc9, 0x83, 0xda, 0x42, 0xc7, 0x49, 0x80, 0x10, 0xe8, 0x82, 0xf0, 0x99,
	0x5a, 0xa4, 0x63, 0x35, 0x46, 0x0d, 0xd0, 0xc5, 0x22, 0x22, 0x46, 0xbe, 0xa1, 0x35, 0x0f, 0xaf,
	0xf6, 0xad, 0x1e, 0x9b, 0xc8, 0xbf, 0xd1, 0x22, 0x22, 0x58, 0x31, 0x72, 0x95, 0xef, 0x0a, 0xd7,
	0xd0, 0x1b, 0x5a, 0x73, 0x1f, 0xab, 0x31, 0xba, 0x04, 0x20, 0x0f, 0x82, 0x50, 0x79, 0x9f, 0xd8,
	0x28, 0x28, 0x66, 0x05, 0x31, 0x7f, 0xd3, 0xa0, 0x94, 0xee, 0x82, 0x8e, 0xa0, 0xda, 0x1b, 0xbc,
	0x76, 0x6e, 0x06, 0xb7, 0xb7, 0xed, 0x7e, 0xa7, 0xb6, 0x87, 0xf6, 0xa1, 0x2c, 0x81, 0xfe, 0x60,
	0x30, 0xac, 0x69, 0xe8, 0x03, 0xb8, 0x90, 0x51, 0xbb, 0xd3, 0x71, 0x86, 0xb6, 0x8d, 0x9d, 0x8e,
	0x3d, 0xc4, 0xf6, 0x4d, 0x7b, 0x64, 0x77, 0x6a, 0x39, 0x74, 0x09, 0x75, 0x49, 0x62, 0xfb, 0x76,
	0x70, 0x67, 0x6f, 0xf0, 0xf9, 0x6c, 0xef, 0xeb, 0x36, 0xc6, 0x5d, 0x1b, 0xd7, 0x74, 0x74, 0x06,
	0xc7, 0xc9, 0x61, 0xfd, 0x6f, 0xbb, 0xaf, 0xbf, 0xc7, 0xed, 0x51, 0x77, 0xd0, 0xaf, 0x15, 0xcc,
	0x5f, 0x73, 0x70, 0xda, 0x8e, 0x22, 0x42, 0x7d, 0x9b, 0x0a, 0x1e, 0x90, 0x18, 0x93, 0x9f, 0xe6,
	0x24, 0x16, 0xe8, 0x15, 0x00, 0x8f, 0x3c, 0x67, 0xaa, 0x4c, 0x50, 0x6a, 0x55, 0xaf, 0xc0, 0x5a,
	0xda, 0x82, 0x2b, 0x3c, 0xf2, 0x52, 0x87, 0xb6, 0xa9, 0x77, 0x0e, 0xc5, 0x30, 0x59, 0x9a, 0x57,
	0x1a, 0xa4, 0x11, 0x7a, 0x09, 0x87, 0x11, 0x27, 0xef, 0x9c, 0x90, 0x4d, 0x1c, 0x42, 0x05, 0x5f,
	0x28, 0xf5, 0x74, 0xbc, 0x2f, 0xd1, 0x1e, 0x9b, 0xc8, 0x5b, 0x2c, 0x90, 0x09, 0x07, 0xcb, 0x59,
	0x6a, 0xeb, 0x82, 0x9a, 0x54, 0x4d, 0x27, 0x8d, 0xe4, 0x09, 0x97, 0x50, 0x22, 0xc9, 0x95, 0x8d,
	0x62, 0x23, 0xdf, 0xac, 0x5e, 0xe9, 0xd2, 0x1e, 0x9c, 0x81, 0xc8, 0x82, 0x93, 0xe4, 0x4c, 0xc7,
	0x63, 0xb3, 0x59, 0x20, 0x9c, 0xc4, 0xf7, 0x92, 0xda, 0xe9, 0x38, 0xa1, 0x6e, 0x14, 0xd3, 0x95,
	0x84, 0xf9, 0x87, 0x06, 0x67, 0x4f, 0x94, 0x88, 0x23, 0x46, 0x63, 0xf2, 0x5f, 0xa5, 0x78, 0x01,
	0xe5, 0xd0, 0x8d, 0x85, 0x4c, 0x46, 0x89, 0xa1, 0xe3, 0x92, 0x8c, 0xe5, 0x6b, 0x34, 0xa0, 0x14,
	0xcf, 0x3d, 0x8f, 0xc4, 0xb1, 0x92, 0xa1, 0x8c, 0xb3, 0x10, 0x35, 0xa1, 0x46, 0x99, 0xc3, 0x89,
	0xe0, 0x0b, 0xe7, 0xde, 0xf5, 0x7e, 0x64, 0xe3, 0xb1, 0x12, 0xa1, 0x8c, 0x0f, 0x29, 0xc3, 0x12,
	0xbe, 0x4e, 0x50, 0xf3, 0x6f, 0x0d, 0x50, 0x6a, 0xda, 0x1d, 0x13, 0x64, 0x47, 0xfe, 0x7d, 0x08,
	0x15, 0xcf, 0xa5, 0x7e, 0xe0, 0xbb, 0x82, 0xa4, 0x16, 0x3e, 0x02, 0xd2, 0xc5, 0x2c, 0xa5, 0x54,
	0xd6, 0xd4, 0xc5, 0x34, 0x31, 0xa5, 0xa8, 0x74, 0x71, 0x39, 0x6b, 0xd5, 0xc5, 0x74, 0x92, 0x72,
	0xb1, 0x95, 0xb9, 0x14, 0x4f, 0x83, 0xc8, 0x11, 0xdc, 0xa5, 0xf1, 0x98, 0x70, 0xa3, 0xa8, 0x52,
	0x45, 0x8f, 0xd4, 0x28, 0x65, 0xcc, 0x5f, 0x34, 0x38, 0x59, 0x4b, 0x77, 0x37, 0x26, 0x9d, 0x42,
	0x21, 0x22, 0x84, 0xc7, 0x69, 0xae, 0x49, 0x20, 0xfd, 0x99, 0x70, 0x97, 0x0a, 0xe2, 0x67, 0xfe,
	0xa4, 0xa1, 0xf9, 0x15, 0x1c, 0x8f, 0x82, 0x19, 0x61, 0x73, 0xd1, 0x67, 0xef, 0x9f, 0xaf, 0xb9,
	0xf9, 0x35, 0xa0, 0xd5, 0xf5, 0xcf, 0x4e, 0xc2, 0xfc, 0x33, 0x07, 0xe7, 0x5d, 0x1a, 0x0b, 0x37,
	0x0c, 0xdf, 0x52, 0x37, 0x8a, 0xa7, 0x4c, 0xfc, 0xff, 0xa5, 0xbb, 0x23, 0xd3, 0x97, 0x62, 0x17,
	0x57, 0xc5, 0x7e, 0x09, 0x07, 0x1e, 0xa3, 0xe3, 0x60, 0x32, 0xe7, 0xae, 0x90, 0x5d, 0xbe, 0xa4,
	0xd8, 0x75, 0x50, 0x3e, 0x98, 0x35, 0x20, 0xbd, 0x4a, 0x59, 0x9d, 0x82, 0xd6, 0xa8, 0x6e, 0xd6,
	0xdb, 0xe3, 0xe0, 0x67, 0x62, 0x54, 0xd4, 0x6f, 0x86, 0x1a, 0x2f, 0x3b, 0x37, 0x3c, 0x76, 0x6e,
	0x93, 0xc3, 0xc5, 0x86, 0x9e, 0xbb, 0x79, 0x5b, 0x2b, 0x55, 0x9e, 0x5f, 0xab, 0xf2, 0xab, 0xbf,
	0x72, 0xa0, 0x63, 0x77, 0x2c, 0x50, 0xef, 0x49, 0xef, 0x19, 0x06, 0x11, 0x09, 0x03, 0x4a, 0xd0,
	0x99, 0xb5, 0xad, 0x3b, 0xd7, 0xcf, 0xad, 0xad, 0xad, 0xca, 0xdc, 0x6b, 0x6a, 0x9f, 0x68, 0xe8,
	0x1b, 0x38, 0x58, 0xa3, 0x9f, 0xbd, 0x0b, 0xfa, 0x12, 0xaa, 0x2b, 0x45, 0x86, 0x4e, 0xac, 0xcd,
	0x0e, 0x53, 0x3f, 0xb5, 0xb6, 0xd4, 0xa1, 0xb9, 0x87, 0x3e, 0x07, 0x78, 0x7c, 0xda, 0x08, 0x59,
	0x1b, 0x75, 0x52, 0x3f, 0xb1, 0x36, 0xdf, 0xbe, 0xb9, 0x87, 0xde, 0xc0, 0xd1, 0x13, 0x07, 0xd0,
	0x85, 0xb5, 0xfd, 0x8d, 0xd7, 0x0d, 0xeb, 0x5f, 0xcc, 0x92, 0x12, 0x5c, 0x7f, 0xfc, 0xc3, 0x47,
	0x93, 0x40, 0x4c, 0xe7, 0xf7, 0x96, 0xc7, 0x66, 0xad, 0x76, 0x18, 0x12, 0xfa, 0x76, 0xea, 0xbe,
	0xff, 0xf4, 0x8b, 0x96, 0xfc, 0xca, 0x68, 0xa9, 0x36, 0x13, 0x31, 0x2e, 0x5a, 0xea, 0x0b, 0xe2,
	0xbe, 0xa8, 0xfe, 0x7d, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x62, 0x96, 0xe9, 0x84,
	0x08, 0x00, 0x00,
}
